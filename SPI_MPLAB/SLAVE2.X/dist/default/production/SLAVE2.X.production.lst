

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Nov 22 08:21:58 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    19                           	dabs	1,0x7E,2
    20  0000                     
    21                           ; Version 2.20
    22                           ; Generated 12/02/2020 GMT
    23                           ; 
    24                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F877A Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     	;# 
    56  0001                     	;# 
    57  0002                     	;# 
    58  0003                     	;# 
    59  0004                     	;# 
    60  0005                     	;# 
    61  0006                     	;# 
    62  0007                     	;# 
    63  0008                     	;# 
    64  0009                     	;# 
    65  000A                     	;# 
    66  000B                     	;# 
    67  000C                     	;# 
    68  000D                     	;# 
    69  000E                     	;# 
    70  000E                     	;# 
    71  000F                     	;# 
    72  0010                     	;# 
    73  0011                     	;# 
    74  0012                     	;# 
    75  0013                     	;# 
    76  0014                     	;# 
    77  0015                     	;# 
    78  0015                     	;# 
    79  0016                     	;# 
    80  0017                     	;# 
    81  0018                     	;# 
    82  0019                     	;# 
    83  001A                     	;# 
    84  001B                     	;# 
    85  001B                     	;# 
    86  001C                     	;# 
    87  001D                     	;# 
    88  001E                     	;# 
    89  001F                     	;# 
    90  0081                     	;# 
    91  0085                     	;# 
    92  0086                     	;# 
    93  0087                     	;# 
    94  0088                     	;# 
    95  0089                     	;# 
    96  008C                     	;# 
    97  008D                     	;# 
    98  008E                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0094                     	;# 
   103  0098                     	;# 
   104  0099                     	;# 
   105  009C                     	;# 
   106  009D                     	;# 
   107  009E                     	;# 
   108  009F                     	;# 
   109  010C                     	;# 
   110  010D                     	;# 
   111  010E                     	;# 
   112  010F                     	;# 
   113  018C                     	;# 
   114  018D                     	;# 
   115  0000                     	;# 
   116  0001                     	;# 
   117  0002                     	;# 
   118  0003                     	;# 
   119  0004                     	;# 
   120  0005                     	;# 
   121  0006                     	;# 
   122  0007                     	;# 
   123  0008                     	;# 
   124  0009                     	;# 
   125  000A                     	;# 
   126  000B                     	;# 
   127  000C                     	;# 
   128  000D                     	;# 
   129  000E                     	;# 
   130  000E                     	;# 
   131  000F                     	;# 
   132  0010                     	;# 
   133  0011                     	;# 
   134  0012                     	;# 
   135  0013                     	;# 
   136  0014                     	;# 
   137  0015                     	;# 
   138  0015                     	;# 
   139  0016                     	;# 
   140  0017                     	;# 
   141  0018                     	;# 
   142  0019                     	;# 
   143  001A                     	;# 
   144  001B                     	;# 
   145  001B                     	;# 
   146  001C                     	;# 
   147  001D                     	;# 
   148  001E                     	;# 
   149  001F                     	;# 
   150  0081                     	;# 
   151  0085                     	;# 
   152  0086                     	;# 
   153  0087                     	;# 
   154  0088                     	;# 
   155  0089                     	;# 
   156  008C                     	;# 
   157  008D                     	;# 
   158  008E                     	;# 
   159  0091                     	;# 
   160  0092                     	;# 
   161  0093                     	;# 
   162  0094                     	;# 
   163  0098                     	;# 
   164  0099                     	;# 
   165  009C                     	;# 
   166  009D                     	;# 
   167  009E                     	;# 
   168  009F                     	;# 
   169  010C                     	;# 
   170  010D                     	;# 
   171  010E                     	;# 
   172  010F                     	;# 
   173  018C                     	;# 
   174  018D                     	;# 
   175  0000                     	;# 
   176  0001                     	;# 
   177  0002                     	;# 
   178  0003                     	;# 
   179  0004                     	;# 
   180  0005                     	;# 
   181  0006                     	;# 
   182  0007                     	;# 
   183  0008                     	;# 
   184  0009                     	;# 
   185  000A                     	;# 
   186  000B                     	;# 
   187  000C                     	;# 
   188  000D                     	;# 
   189  000E                     	;# 
   190  000E                     	;# 
   191  000F                     	;# 
   192  0010                     	;# 
   193  0011                     	;# 
   194  0012                     	;# 
   195  0013                     	;# 
   196  0014                     	;# 
   197  0015                     	;# 
   198  0015                     	;# 
   199  0016                     	;# 
   200  0017                     	;# 
   201  0018                     	;# 
   202  0019                     	;# 
   203  001A                     	;# 
   204  001B                     	;# 
   205  001B                     	;# 
   206  001C                     	;# 
   207  001D                     	;# 
   208  001E                     	;# 
   209  001F                     	;# 
   210  0081                     	;# 
   211  0085                     	;# 
   212  0086                     	;# 
   213  0087                     	;# 
   214  0088                     	;# 
   215  0089                     	;# 
   216  008C                     	;# 
   217  008D                     	;# 
   218  008E                     	;# 
   219  0091                     	;# 
   220  0092                     	;# 
   221  0093                     	;# 
   222  0094                     	;# 
   223  0098                     	;# 
   224  0099                     	;# 
   225  009C                     	;# 
   226  009D                     	;# 
   227  009E                     	;# 
   228  009F                     	;# 
   229  010C                     	;# 
   230  010D                     	;# 
   231  010E                     	;# 
   232  010F                     	;# 
   233  018C                     	;# 
   234  018D                     	;# 
   235  0013                     _SSPBUF	set	19
   236  0014                     _SSPCON	set	20
   237  0008                     _PORTD	set	8
   238  0019                     _TXREG	set	25
   239  001A                     _RCREG	set	26
   240  0040                     _RD0	set	64
   241  0063                     _SSPIF	set	99
   242  005E                     _PEIE	set	94
   243  005F                     _GIE	set	95
   244  0065                     _RCIF	set	101
   245  00C4                     _CREN	set	196
   246  00C7                     _SPEN	set	199
   247  0094                     _SSPSTATbits	set	148
   248  0094                     _SSPSTAT	set	148
   249  009F                     _ADCON1	set	159
   250  0088                     _TRISD	set	136
   251  0099                     _SPBRG	set	153
   252  043B                     _TRISC3	set	1083
   253  043D                     _TRISC5	set	1085
   254  042D                     _TRISA5	set	1069
   255  0463                     _SSPIE	set	1123
   256  04C1                     _TRMT	set	1217
   257  04C5                     _TXEN	set	1221
   258  043E                     _TRISC6	set	1086
   259  043F                     _TRISC7	set	1087
   260  04C4                     _SYNC	set	1220
   261  04C2                     _BRGH	set	1218
   262                           
   263                           	psect	strings
   264  0003                     __pstrings:
   265  0003                     stringtab:
   266  0003                     __stringtab:
   267  0003                     stringcode:	
   268                           ;	String table - string pointers are 1 byte each
   269                           
   270  0003                     stringdir:
   271  0003  3000               	movlw	high stringdir
   272  0004  008A               	movwf	10
   273  0005  0804               	movf	4,w
   274  0006  0A84               	incf	4,f
   275  0007  0782               	addwf	2,f
   276  0008                     __stringbase:
   277  0008  3400               	retlw	0
   278  0009                     __end_of__stringtab:
   279  0009                     STR_1:
   280  0009  3444               	retlw	68	;'D'
   281  000A  3461               	retlw	97	;'a'
   282  000B  3474               	retlw	116	;'t'
   283  000C  3461               	retlw	97	;'a'
   284  000D  3420               	retlw	32	;' '
   285  000E  343D               	retlw	61	;'='
   286  000F  3420               	retlw	32	;' '
   287  0010  3400               	retlw	0
   288  0011                     STR_2:
   289  0011  340A               	retlw	10
   290  0012  340D               	retlw	13
   291  0013  3400               	retlw	0
   292                           
   293                           	psect	cinit
   294  07FC                     start_initialization:	
   295                           ; #config settings
   296                           
   297  07FC                     __initialization:
   298  07FC                     end_of_initialization:	
   299                           ;End of C runtime variable initialization code
   300                           
   301  07FC                     __end_of__initialization:
   302  07FC  0183               	clrf	3
   303  07FD  120A  118A  2DF9   	ljmp	_main	;jump to C main() function
   304                           
   305                           	psect	cstackCOMMON
   306  0070                     __pcstackCOMMON:
   307  0070                     ?_spiInit:
   308  0070                     ?_spiRead:	
   309                           ; 1 bytes @ 0x0
   310                           
   311  0070                     ??_spiRead:	
   312                           ; 1 bytes @ 0x0
   313                           
   314  0070                     ?_spiWrite:	
   315                           ; 1 bytes @ 0x0
   316                           
   317  0070                     ??_spiWrite:	
   318                           ; 1 bytes @ 0x0
   319                           
   320  0070                     ?_UART_Write:	
   321                           ; 1 bytes @ 0x0
   322                           
   323  0070                     ??_UART_Write:	
   324                           ; 1 bytes @ 0x0
   325                           
   326  0070                     ?_UART_Write_Text:	
   327                           ; 1 bytes @ 0x0
   328                           
   329  0070                     ?_main:	
   330                           ; 1 bytes @ 0x0
   331                           
   332  0070                     ?_spiReceiveWait:	
   333                           ; 1 bytes @ 0x0
   334                           
   335  0070                     ??_spiReceiveWait:	
   336                           ; 1 bytes @ 0x0
   337                           
   338  0070                     ?_spiDataReady:	
   339                           ; 1 bytes @ 0x0
   340                           
   341  0070                     ?___aldiv:	
   342                           ; 2 bytes @ 0x0
   343                           
   344  0070                     UART_Write@data:	
   345                           ; 4 bytes @ 0x0
   346                           
   347  0070                     spiInit@sDataSample:	
   348                           ; 1 bytes @ 0x0
   349                           
   350  0070                     spiWrite@dat:	
   351                           ; 1 bytes @ 0x0
   352                           
   353  0070                     ___aldiv@divisor:	
   354                           ; 1 bytes @ 0x0
   355                           
   356                           
   357                           ; 4 bytes @ 0x0
   358  0070                     	ds	1
   359  0071                     ??_UART_Write_Text:
   360  0071                     spiInit@sClockIdle:	
   361                           ; 1 bytes @ 0x1
   362                           
   363  0071                     UART_Write_Text@i:	
   364                           ; 1 bytes @ 0x1
   365                           
   366                           
   367                           ; 2 bytes @ 0x1
   368  0071                     	ds	1
   369  0072                     ??_spiDataReady:
   370  0072                     spiInit@sTransmitEdge:	
   371                           ; 1 bytes @ 0x2
   372                           
   373                           
   374                           ; 1 bytes @ 0x2
   375  0072                     	ds	1
   376  0073                     ??_spiInit:
   377  0073                     UART_Write_Text@text:	
   378                           ; 1 bytes @ 0x3
   379                           
   380  0073                     spiInit@sType:	
   381                           ; 1 bytes @ 0x3
   382                           
   383                           
   384                           ; 1 bytes @ 0x3
   385  0073                     	ds	1
   386  0074                     ___aldiv@dividend:
   387                           
   388                           ; 4 bytes @ 0x4
   389  0074                     	ds	4
   390  0078                     ??___aldiv:
   391                           
   392                           ; 1 bytes @ 0x8
   393  0078                     	ds	1
   394  0079                     UART_Init@x:
   395                           
   396                           ; 2 bytes @ 0x9
   397  0079                     	ds	2
   398  007B                     ??_main:
   399                           
   400                           ; 1 bytes @ 0xB
   401  007B                     	ds	3
   402                           
   403                           	psect	cstackBANK0
   404  0020                     __pcstackBANK0:
   405  0020                     ___aldiv@counter:
   406                           
   407                           ; 1 bytes @ 0x0
   408  0020                     	ds	1
   409  0021                     ___aldiv@sign:
   410                           
   411                           ; 1 bytes @ 0x1
   412  0021                     	ds	1
   413  0022                     ___aldiv@quotient:
   414                           
   415                           ; 4 bytes @ 0x2
   416  0022                     	ds	4
   417  0026                     ?_UART_Init:
   418  0026                     UART_Init@baudrate:	
   419                           ; 1 bytes @ 0x6
   420                           
   421                           
   422                           ; 4 bytes @ 0x6
   423  0026                     	ds	4
   424  002A                     ??_UART_Init:
   425                           
   426                           ; 1 bytes @ 0xA
   427  002A                     	ds	12
   428  0036                     main@data:
   429                           
   430                           ; 2 bytes @ 0x16
   431  0036                     	ds	2
   432                           
   433                           	psect	maintext
   434  05F9                     __pmaintext:	
   435 ;;
   436 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   437 ;;
   438 ;; *************** function _main *****************
   439 ;; Defined at:
   440 ;;		line 24 in file "newmain.c"
   441 ;; Parameters:    Size  Location     Type
   442 ;;		None
   443 ;; Auto vars:     Size  Location     Type
   444 ;;  data            2   22[BANK0 ] int 
   445 ;; Return value:  Size  Location     Type
   446 ;;                  1    wreg      void 
   447 ;; Registers used:
   448 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   449 ;; Tracked objects:
   450 ;;		On entry : B00/0
   451 ;;		On exit  : 0/0
   452 ;;		Unchanged: 0/0
   453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   454 ;;      Params:         0       0       0       0       0
   455 ;;      Locals:         0       2       0       0       0
   456 ;;      Temps:          3       0       0       0       0
   457 ;;      Totals:         3       2       0       0       0
   458 ;;Total ram usage:        5 bytes
   459 ;; Hardware stack levels required when called: 2
   460 ;; This function calls:
   461 ;;		_UART_Init
   462 ;;		_UART_Write
   463 ;;		_UART_Write_Text
   464 ;;		_spiDataReady
   465 ;;		_spiInit
   466 ;;		_spiRead
   467 ;;		_spiWrite
   468 ;; This function is called by:
   469 ;;		Startup code after reset
   470 ;; This function uses a non-reentrant model
   471 ;;
   472                           
   473                           
   474                           ;psect for function _main
   475  05F9                     _main:
   476  05F9                     l999:	
   477                           ;incstack = 0
   478                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   479                           
   480                           
   481                           ;newmain.c: 26:    TRISD = 0;
   482  05F9  1683               	bsf	3,5	;RP0=1, select bank1
   483  05FA  1303               	bcf	3,6	;RP1=0, select bank1
   484  05FB  0188               	clrf	8	;volatile
   485                           
   486                           ;newmain.c: 27:    PORTD = 0;
   487  05FC  1283               	bcf	3,5	;RP0=0, select bank0
   488  05FD  1303               	bcf	3,6	;RP1=0, select bank0
   489  05FE  0188               	clrf	8	;volatile
   490  05FF                     l1001:
   491                           
   492                           ;newmain.c: 29:    GIE = 1;
   493  05FF  178B               	bsf	11,7	;volatile
   494  0600                     l1003:
   495                           
   496                           ;newmain.c: 30:    PEIE = 1;
   497  0600  170B               	bsf	11,6	;volatile
   498  0601                     l1005:
   499                           
   500                           ;newmain.c: 31:    SSPIF = 0;
   501  0601  118C               	bcf	12,3	;volatile
   502  0602                     l1007:
   503                           
   504                           ;newmain.c: 32:    SSPIE = 1;
   505  0602  1683               	bsf	3,5	;RP0=1, select bank1
   506  0603  1303               	bcf	3,6	;RP1=0, select bank1
   507  0604  158C               	bsf	12,3	;volatile
   508  0605                     l1009:
   509                           
   510                           ;newmain.c: 33:    ADCON1 = 0x07;
   511  0605  3007               	movlw	7
   512  0606  009F               	movwf	31	;volatile
   513  0607                     l1011:
   514                           
   515                           ;newmain.c: 34:    TRISA5 = 1;
   516  0607  1685               	bsf	5,5	;volatile
   517  0608                     l1013:
   518                           
   519                           ;newmain.c: 35:    UART_Init (9600);
   520  0608  3000               	movlw	0
   521  0609  1283               	bcf	3,5	;RP0=0, select bank0
   522  060A  1303               	bcf	3,6	;RP1=0, select bank0
   523  060B  00A9               	movwf	UART_Init@baudrate+3
   524  060C  3000               	movlw	0
   525  060D  00A8               	movwf	UART_Init@baudrate+2
   526  060E  3025               	movlw	37
   527  060F  00A7               	movwf	UART_Init@baudrate+1
   528  0610  3080               	movlw	128
   529  0611  00A6               	movwf	UART_Init@baudrate
   530  0612  120A  118A  2722  120A  118A  	fcall	_UART_Init
   531  0617                     l1015:
   532                           
   533                           ;newmain.c: 36:    spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW, 
      +                          SPI_IDLE_2_ACTIVE);
   534  0617  01F0               	clrf	spiInit@sDataSample
   535  0618  01F1               	clrf	spiInit@sClockIdle
   536  0619  01F2               	clrf	spiInit@sTransmitEdge
   537  061A  3024               	movlw	36
   538  061B  120A  118A  25BE  120A  118A  	fcall	_spiInit
   539  0620                     l1017:
   540                           
   541                           ;newmain.c: 38:    {;newmain.c: 39:        if(spiDataReady())
   542  0620  120A  118A  25B0  120A  118A  	fcall	_spiDataReady
   543  0625  0870               	movf	?_spiDataReady,w
   544  0626  0471               	iorwf	?_spiDataReady+1,w
   545  0627  1903               	btfsc	3,2
   546  0628  2E2A               	goto	u511
   547  0629  2E2B               	goto	u510
   548  062A                     u511:
   549  062A  2E78               	goto	l93
   550  062B                     u510:
   551  062B                     l1019:
   552                           
   553                           ;newmain.c: 40:        {;newmain.c: 41:            int data;;newmain.c: 42:            d
      +                          ata = spiRead ();
   554  062B  120A  118A  259B  120A  118A  	fcall	_spiRead
   555  0630  00FB               	movwf	??_main
   556  0631  01FC               	clrf	??_main+1
   557  0632  087B               	movf	??_main,w
   558  0633  1283               	bcf	3,5	;RP0=0, select bank0
   559  0634  1303               	bcf	3,6	;RP1=0, select bank0
   560  0635  00B6               	movwf	main@data
   561  0636  087C               	movf	??_main+1,w
   562  0637  00B7               	movwf	main@data+1
   563                           
   564                           ;newmain.c: 43:            if (spiRead ())
   565  0638  120A  118A  259B  120A  118A  	fcall	_spiRead
   566  063D  3A00               	xorlw	0
   567  063E  1903               	skipnz
   568  063F  2E41               	goto	u521
   569  0640  2E42               	goto	u520
   570  0641                     u521:
   571  0641  2E74               	goto	l1033
   572  0642                     u520:
   573  0642                     l1021:
   574                           
   575                           ;newmain.c: 44:            {;newmain.c: 45:                RD0 = 1;
   576  0642  1283               	bcf	3,5	;RP0=0, select bank0
   577  0643  1303               	bcf	3,6	;RP1=0, select bank0
   578  0644  1408               	bsf	8,0	;volatile
   579  0645                     l1023:
   580                           
   581                           ;newmain.c: 46:                spiWrite (1);
   582  0645  3001               	movlw	1
   583  0646  120A  118A  258E  120A  118A  	fcall	_spiWrite
   584  064B                     l1025:
   585                           
   586                           ;newmain.c: 47:                UART_Write_Text ("Data = ");
   587  064B  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   588  064C  120A  118A  25D4  120A  118A  	fcall	_UART_Write_Text
   589  0651                     l1027:
   590                           
   591                           ;newmain.c: 48:                UART_Write (data);
   592  0651  1283               	bcf	3,5	;RP0=0, select bank0
   593  0652  1303               	bcf	3,6	;RP1=0, select bank0
   594  0653  0836               	movf	main@data,w
   595  0654  120A  118A  25A4  120A  118A  	fcall	_UART_Write
   596  0659                     l1029:
   597                           
   598                           ;newmain.c: 49:                _delay((unsigned long)((90)*(8000000/4000.0)));
   599  0659  30EA               	movlw	234
   600  065A  00FC               	movwf	??_main+1
   601  065B  30C3               	movlw	195
   602  065C  00FB               	movwf	??_main
   603  065D                     u537:
   604  065D  0BFB               	decfsz	??_main,f
   605  065E  2E5D               	goto	u537
   606  065F  0BFC               	decfsz	??_main+1,f
   607  0660  2E5D               	goto	u537
   608  0661                     l1031:
   609                           
   610                           ;newmain.c: 50:                UART_Write_Text ("\n\r");
   611  0661  3009               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   612  0662  120A  118A  25D4  120A  118A  	fcall	_UART_Write_Text
   613                           
   614                           ;newmain.c: 51:                _delay((unsigned long)((1000)*(8000000/4000.0)));
   615  0667  300B               	movlw	11
   616  0668  00FD               	movwf	??_main+2
   617  0669  3026               	movlw	38
   618  066A  00FC               	movwf	??_main+1
   619  066B  305D               	movlw	93
   620  066C  00FB               	movwf	??_main
   621  066D                     u547:
   622  066D  0BFB               	decfsz	??_main,f
   623  066E  2E6D               	goto	u547
   624  066F  0BFC               	decfsz	??_main+1,f
   625  0670  2E6D               	goto	u547
   626  0671  0BFD               	decfsz	??_main+2,f
   627  0672  2E6D               	goto	u547
   628  0673  2E74               	nop2
   629  0674                     l1033:
   630                           
   631                           ;newmain.c: 53:            RD0 = 0;
   632  0674  1283               	bcf	3,5	;RP0=0, select bank0
   633  0675  1303               	bcf	3,6	;RP1=0, select bank0
   634  0676  1008               	bcf	8,0	;volatile
   635  0677                     l1035:
   636                           
   637                           ;newmain.c: 54:            SSPIF = 0;
   638  0677  118C               	bcf	12,3	;volatile
   639  0678                     l93:	
   640                           ;newmain.c: 55:        }
   641                           
   642                           
   643                           ;newmain.c: 56:        _delay((unsigned long)((5)*(8000000/4000.0)));
   644  0678  300D               	movlw	13
   645  0679  00FC               	movwf	??_main+1
   646  067A  30FB               	movlw	251
   647  067B  00FB               	movwf	??_main
   648  067C                     u557:
   649  067C  0BFB               	decfsz	??_main,f
   650  067D  2E7C               	goto	u557
   651  067E  0BFC               	decfsz	??_main+1,f
   652  067F  2E7C               	goto	u557
   653  0680  2E81               	nop2
   654  0681  2E20               	goto	l1017
   655  0682  120A  118A  2800   	ljmp	start
   656  0685                     __end_of_main:
   657                           
   658                           	psect	text1
   659  058E                     __ptext1:	
   660 ;; *************** function _spiWrite *****************
   661 ;; Defined at:
   662 ;;		line 34 in file "spi.c"
   663 ;; Parameters:    Size  Location     Type
   664 ;;  dat             1    wreg     unsigned char 
   665 ;; Auto vars:     Size  Location     Type
   666 ;;  dat             1    0[COMMON] unsigned char 
   667 ;; Return value:  Size  Location     Type
   668 ;;                  1    wreg      void 
   669 ;; Registers used:
   670 ;;		wreg
   671 ;; Tracked objects:
   672 ;;		On entry : 0/0
   673 ;;		On exit  : 0/0
   674 ;;		Unchanged: 0/0
   675 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   676 ;;      Params:         0       0       0       0       0
   677 ;;      Locals:         1       0       0       0       0
   678 ;;      Temps:          0       0       0       0       0
   679 ;;      Totals:         1       0       0       0       0
   680 ;;Total ram usage:        1 bytes
   681 ;; Hardware stack levels used: 1
   682 ;; This function calls:
   683 ;;		Nothing
   684 ;; This function is called by:
   685 ;;		_main
   686 ;; This function uses a non-reentrant model
   687 ;;
   688                           
   689                           
   690                           ;psect for function _spiWrite
   691  058E                     _spiWrite:
   692                           
   693                           ;incstack = 0
   694                           ; Regs used in _spiWrite: [wreg]
   695                           ;spiWrite@dat stored from wreg
   696  058E  00F0               	movwf	spiWrite@dat
   697  058F                     l997:
   698                           
   699                           ;spi.c: 34: void spiWrite(char dat);spi.c: 35: {;spi.c: 36:     SSPBUF = dat;
   700  058F  0870               	movf	spiWrite@dat,w
   701  0590  1283               	bcf	3,5	;RP0=0, select bank0
   702  0591  1303               	bcf	3,6	;RP1=0, select bank0
   703  0592  0093               	movwf	19	;volatile
   704  0593                     l123:
   705  0593  0008               	return
   706  0594                     __end_of_spiWrite:
   707                           
   708                           	psect	text2
   709  059B                     __ptext2:	
   710 ;; *************** function _spiRead *****************
   711 ;; Defined at:
   712 ;;		line 47 in file "spi.c"
   713 ;; Parameters:    Size  Location     Type
   714 ;;		None
   715 ;; Auto vars:     Size  Location     Type
   716 ;;		None
   717 ;; Return value:  Size  Location     Type
   718 ;;                  1    wreg      unsigned char 
   719 ;; Registers used:
   720 ;;		wreg, status,2, status,0, pclath, cstack
   721 ;; Tracked objects:
   722 ;;		On entry : 0/0
   723 ;;		On exit  : 0/0
   724 ;;		Unchanged: 0/0
   725 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   726 ;;      Params:         0       0       0       0       0
   727 ;;      Locals:         0       0       0       0       0
   728 ;;      Temps:          0       0       0       0       0
   729 ;;      Totals:         0       0       0       0       0
   730 ;;Total ram usage:        0 bytes
   731 ;; Hardware stack levels used: 1
   732 ;; Hardware stack levels required when called: 1
   733 ;; This function calls:
   734 ;;		_spiReceiveWait
   735 ;; This function is called by:
   736 ;;		_main
   737 ;; This function uses a non-reentrant model
   738 ;;
   739                           
   740                           
   741                           ;psect for function _spiRead
   742  059B                     _spiRead:
   743  059B                     l991:	
   744                           ;incstack = 0
   745                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
   746                           
   747                           
   748                           ;spi.c: 49:     spiReceiveWait();
   749  059B  120A  118A  2594  120A  118A  	fcall	_spiReceiveWait
   750  05A0                     l993:
   751                           
   752                           ;spi.c: 50:     return(SSPBUF);
   753  05A0  1283               	bcf	3,5	;RP0=0, select bank0
   754  05A1  1303               	bcf	3,6	;RP1=0, select bank0
   755  05A2  0813               	movf	19,w	;volatile
   756  05A3                     l131:
   757  05A3  0008               	return
   758  05A4                     __end_of_spiRead:
   759                           
   760                           	psect	text3
   761  0594                     __ptext3:	
   762 ;; *************** function _spiReceiveWait *****************
   763 ;; Defined at:
   764 ;;		line 29 in file "spi.c"
   765 ;; Parameters:    Size  Location     Type
   766 ;;		None
   767 ;; Auto vars:     Size  Location     Type
   768 ;;		None
   769 ;; Return value:  Size  Location     Type
   770 ;;                  1    wreg      void 
   771 ;; Registers used:
   772 ;;		None
   773 ;; Tracked objects:
   774 ;;		On entry : 0/0
   775 ;;		On exit  : 0/0
   776 ;;		Unchanged: 0/0
   777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   778 ;;      Params:         0       0       0       0       0
   779 ;;      Locals:         0       0       0       0       0
   780 ;;      Temps:          0       0       0       0       0
   781 ;;      Totals:         0       0       0       0       0
   782 ;;Total ram usage:        0 bytes
   783 ;; Hardware stack levels used: 1
   784 ;; This function calls:
   785 ;;		Nothing
   786 ;; This function is called by:
   787 ;;		_spiRead
   788 ;; This function uses a non-reentrant model
   789 ;;
   790                           
   791                           
   792                           ;psect for function _spiReceiveWait
   793  0594                     _spiReceiveWait:
   794  0594                     l893:	
   795                           ;incstack = 0
   796                           ; Regs used in _spiReceiveWait: []
   797                           
   798  0594                     l117:	
   799                           ;spi.c: 31:     while ( !SSPSTATbits.BF );
   800                           
   801  0594  1683               	bsf	3,5	;RP0=1, select bank1
   802  0595  1303               	bcf	3,6	;RP1=0, select bank1
   803  0596  1C14               	btfss	20,0	;volatile
   804  0597  2D99               	goto	u291
   805  0598  2D9A               	goto	u290
   806  0599                     u291:
   807  0599  2D94               	goto	l117
   808  059A                     u290:
   809  059A                     l120:
   810  059A  0008               	return
   811  059B                     __end_of_spiReceiveWait:
   812                           
   813                           	psect	text4
   814  05BE                     __ptext4:	
   815 ;; *************** function _spiInit *****************
   816 ;; Defined at:
   817 ;;		line 12 in file "spi.c"
   818 ;; Parameters:    Size  Location     Type
   819 ;;  sType           1    wreg     enum E850
   820 ;;  sDataSample     1    0[COMMON] enum E858
   821 ;;  sClockIdle      1    1[COMMON] enum E862
   822 ;;  sTransmitEdg    1    2[COMMON] enum E866
   823 ;; Auto vars:     Size  Location     Type
   824 ;;  sType           1    3[COMMON] enum E850
   825 ;; Return value:  Size  Location     Type
   826 ;;                  1    wreg      void 
   827 ;; Registers used:
   828 ;;		wreg, status,2, status,0
   829 ;; Tracked objects:
   830 ;;		On entry : 0/0
   831 ;;		On exit  : 0/0
   832 ;;		Unchanged: 0/0
   833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   834 ;;      Params:         3       0       0       0       0
   835 ;;      Locals:         1       0       0       0       0
   836 ;;      Temps:          0       0       0       0       0
   837 ;;      Totals:         4       0       0       0       0
   838 ;;Total ram usage:        4 bytes
   839 ;; Hardware stack levels used: 1
   840 ;; This function calls:
   841 ;;		Nothing
   842 ;; This function is called by:
   843 ;;		_main
   844 ;; This function uses a non-reentrant model
   845 ;;
   846                           
   847                           
   848                           ;psect for function _spiInit
   849  05BE                     _spiInit:
   850                           
   851                           ;incstack = 0
   852                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   853                           ;spiInit@sType stored from wreg
   854  05BE  00F3               	movwf	spiInit@sType
   855  05BF                     l969:
   856                           
   857                           ;spi.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);spi.c: 13: {;spi.c: 14:     TRISC5 = 0;
   858  05BF  1683               	bsf	3,5	;RP0=1, select bank1
   859  05C0  1303               	bcf	3,6	;RP1=0, select bank1
   860  05C1  1287               	bcf	7,5	;volatile
   861                           
   862                           ;spi.c: 15:     if(sType & 0b00000100)
   863  05C2  1D73               	btfss	spiInit@sType,2
   864  05C3  2DC5               	goto	u491
   865  05C4  2DC6               	goto	u490
   866  05C5                     u491:
   867  05C5  2DCA               	goto	l975
   868  05C6                     u490:
   869  05C6                     l971:
   870                           
   871                           ;spi.c: 16:     {;spi.c: 17:         SSPSTAT = sTransmitEdge;
   872  05C6  0872               	movf	spiInit@sTransmitEdge,w
   873  05C7  0094               	movwf	20	;volatile
   874  05C8                     l973:
   875                           
   876                           ;spi.c: 18:         TRISC3 = 1;
   877  05C8  1587               	bsf	7,3	;volatile
   878                           
   879                           ;spi.c: 19:     }
   880  05C9  2DCE               	goto	l113
   881  05CA                     l975:
   882                           
   883                           ;spi.c: 21:     {;spi.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
   884  05CA  0870               	movf	spiInit@sDataSample,w
   885  05CB  0472               	iorwf	spiInit@sTransmitEdge,w
   886  05CC  0094               	movwf	20	;volatile
   887  05CD                     l977:
   888                           
   889                           ;spi.c: 23:         TRISC3 = 0;
   890  05CD  1187               	bcf	7,3	;volatile
   891  05CE                     l113:	
   892                           ;spi.c: 24:     }
   893                           
   894                           
   895                           ;spi.c: 26:     SSPCON = sType | sClockIdle;
   896  05CE  0873               	movf	spiInit@sType,w
   897  05CF  0471               	iorwf	spiInit@sClockIdle,w
   898  05D0  1283               	bcf	3,5	;RP0=0, select bank0
   899  05D1  1303               	bcf	3,6	;RP1=0, select bank0
   900  05D2  0094               	movwf	20	;volatile
   901  05D3                     l114:
   902  05D3  0008               	return
   903  05D4                     __end_of_spiInit:
   904                           
   905                           	psect	text5
   906  05B0                     __ptext5:	
   907 ;; *************** function _spiDataReady *****************
   908 ;; Defined at:
   909 ;;		line 39 in file "spi.c"
   910 ;; Parameters:    Size  Location     Type
   911 ;;		None
   912 ;; Auto vars:     Size  Location     Type
   913 ;;		None
   914 ;; Return value:  Size  Location     Type
   915 ;;                  2    0[COMMON] unsigned int 
   916 ;; Registers used:
   917 ;;		wreg, status,2
   918 ;; Tracked objects:
   919 ;;		On entry : 0/0
   920 ;;		On exit  : 0/0
   921 ;;		Unchanged: 0/0
   922 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   923 ;;      Params:         2       0       0       0       0
   924 ;;      Locals:         0       0       0       0       0
   925 ;;      Temps:          0       0       0       0       0
   926 ;;      Totals:         2       0       0       0       0
   927 ;;Total ram usage:        2 bytes
   928 ;; Hardware stack levels used: 1
   929 ;; This function calls:
   930 ;;		Nothing
   931 ;; This function is called by:
   932 ;;		_main
   933 ;; This function uses a non-reentrant model
   934 ;;
   935                           
   936                           
   937                           ;psect for function _spiDataReady
   938  05B0                     _spiDataReady:
   939  05B0                     l979:	
   940                           ;incstack = 0
   941                           ; Regs used in _spiDataReady: [wreg+status,2]
   942                           
   943                           
   944                           ;spi.c: 41:     if(SSPSTATbits.BF)
   945  05B0  1683               	bsf	3,5	;RP0=1, select bank1
   946  05B1  1303               	bcf	3,6	;RP1=0, select bank1
   947  05B2  1C14               	btfss	20,0	;volatile
   948  05B3  2DB5               	goto	u501
   949  05B4  2DB6               	goto	u500
   950  05B5                     u501:
   951  05B5  2DBB               	goto	l987
   952  05B6                     u500:
   953  05B6                     l981:
   954                           
   955                           ;spi.c: 42:         return 1;
   956  05B6  3001               	movlw	1
   957  05B7  00F0               	movwf	?_spiDataReady
   958  05B8  3000               	movlw	0
   959  05B9  00F1               	movwf	?_spiDataReady+1
   960  05BA  2DBD               	goto	l127
   961  05BB                     l987:
   962                           
   963                           ;spi.c: 44:         return 0;
   964  05BB  01F0               	clrf	?_spiDataReady
   965  05BC  01F1               	clrf	?_spiDataReady+1
   966  05BD                     l127:
   967  05BD  0008               	return
   968  05BE                     __end_of_spiDataReady:
   969                           
   970                           	psect	text6
   971  05D4                     __ptext6:	
   972 ;; *************** function _UART_Write_Text *****************
   973 ;; Defined at:
   974 ;;		line 53 in file "./uart.h"
   975 ;; Parameters:    Size  Location     Type
   976 ;;  text            1    wreg     PTR unsigned char 
   977 ;;		 -> STR_2(3), STR_1(8), 
   978 ;; Auto vars:     Size  Location     Type
   979 ;;  text            1    3[COMMON] PTR unsigned char 
   980 ;;		 -> STR_2(3), STR_1(8), 
   981 ;;  i               2    1[COMMON] int 
   982 ;; Return value:  Size  Location     Type
   983 ;;                  1    wreg      void 
   984 ;; Registers used:
   985 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   986 ;; Tracked objects:
   987 ;;		On entry : 0/0
   988 ;;		On exit  : 0/0
   989 ;;		Unchanged: 0/0
   990 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   991 ;;      Params:         0       0       0       0       0
   992 ;;      Locals:         3       0       0       0       0
   993 ;;      Temps:          0       0       0       0       0
   994 ;;      Totals:         3       0       0       0       0
   995 ;;Total ram usage:        3 bytes
   996 ;; Hardware stack levels used: 1
   997 ;; Hardware stack levels required when called: 1
   998 ;; This function calls:
   999 ;;		_UART_Write
  1000 ;; This function is called by:
  1001 ;;		_main
  1002 ;; This function uses a non-reentrant model
  1003 ;;
  1004                           
  1005                           
  1006                           ;psect for function _UART_Write_Text
  1007  05D4                     _UART_Write_Text:
  1008                           
  1009                           ;incstack = 0
  1010                           ; Regs used in _UART_Write_Text: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1011                           ;UART_Write_Text@text stored from wreg
  1012  05D4  00F3               	movwf	UART_Write_Text@text
  1013  05D5                     l961:
  1014                           
  1015                           ;./uart.h: 53: void UART_Write_Text(char *text);./uart.h: 54: {;./uart.h: 55:   int i;;.
      +                          /uart.h: 56:   for(i=0;text[i]!='\0';i++)
  1016  05D5  01F1               	clrf	UART_Write_Text@i
  1017  05D6  01F2               	clrf	UART_Write_Text@i+1
  1018  05D7  2DEB               	goto	l967
  1019  05D8                     l963:
  1020                           
  1021                           ;./uart.h: 57:    UART_Write(text[i]);
  1022  05D8  0871               	movf	UART_Write_Text@i,w
  1023  05D9  0773               	addwf	UART_Write_Text@text,w
  1024  05DA  0084               	movwf	4
  1025  05DB  120A  118A  2003  120A  118A  	fcall	stringdir
  1026  05E0  120A  118A  25A4  120A  118A  	fcall	_UART_Write
  1027  05E5                     l965:
  1028  05E5  3001               	movlw	1
  1029  05E6  07F1               	addwf	UART_Write_Text@i,f
  1030  05E7  1803               	skipnc
  1031  05E8  0AF2               	incf	UART_Write_Text@i+1,f
  1032  05E9  3000               	movlw	0
  1033  05EA  07F2               	addwf	UART_Write_Text@i+1,f
  1034  05EB                     l967:
  1035  05EB  0871               	movf	UART_Write_Text@i,w
  1036  05EC  0773               	addwf	UART_Write_Text@text,w
  1037  05ED  0084               	movwf	4
  1038  05EE  120A  118A  2003  120A  118A  	fcall	stringdir
  1039  05F3  3A00               	xorlw	0
  1040  05F4  1D03               	skipz
  1041  05F5  2DF7               	goto	u481
  1042  05F6  2DF8               	goto	u480
  1043  05F7                     u481:
  1044  05F7  2DD8               	goto	l963
  1045  05F8                     u480:
  1046  05F8                     l87:
  1047  05F8  0008               	return
  1048  05F9                     __end_of_UART_Write_Text:
  1049                           
  1050                           	psect	text7
  1051  05A4                     __ptext7:	
  1052 ;; *************** function _UART_Write *****************
  1053 ;; Defined at:
  1054 ;;		line 47 in file "./uart.h"
  1055 ;; Parameters:    Size  Location     Type
  1056 ;;  data            1    wreg     unsigned char 
  1057 ;; Auto vars:     Size  Location     Type
  1058 ;;  data            1    0[COMMON] unsigned char 
  1059 ;; Return value:  Size  Location     Type
  1060 ;;                  1    wreg      void 
  1061 ;; Registers used:
  1062 ;;		wreg
  1063 ;; Tracked objects:
  1064 ;;		On entry : 0/0
  1065 ;;		On exit  : 0/0
  1066 ;;		Unchanged: 0/0
  1067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1068 ;;      Params:         0       0       0       0       0
  1069 ;;      Locals:         1       0       0       0       0
  1070 ;;      Temps:          0       0       0       0       0
  1071 ;;      Totals:         1       0       0       0       0
  1072 ;;Total ram usage:        1 bytes
  1073 ;; Hardware stack levels used: 1
  1074 ;; This function calls:
  1075 ;;		Nothing
  1076 ;; This function is called by:
  1077 ;;		_UART_Write_Text
  1078 ;;		_main
  1079 ;; This function uses a non-reentrant model
  1080 ;;
  1081                           
  1082                           
  1083                           ;psect for function _UART_Write
  1084  05A4                     _UART_Write:
  1085                           
  1086                           ;incstack = 0
  1087                           ; Regs used in _UART_Write: [wreg]
  1088                           ;UART_Write@data stored from wreg
  1089  05A4  00F0               	movwf	UART_Write@data
  1090  05A5                     l889:
  1091  05A5                     l78:	
  1092                           ;./uart.h: 47: void UART_Write(char data);./uart.h: 48: {;./uart.h: 49:   while(!TRMT);
  1093                           
  1094  05A5  1683               	bsf	3,5	;RP0=1, select bank1
  1095  05A6  1303               	bcf	3,6	;RP1=0, select bank1
  1096  05A7  1C98               	btfss	24,1	;volatile
  1097  05A8  2DAA               	goto	u281
  1098  05A9  2DAB               	goto	u280
  1099  05AA                     u281:
  1100  05AA  2DA5               	goto	l78
  1101  05AB                     u280:
  1102  05AB                     l891:
  1103                           
  1104                           ;./uart.h: 50:   TXREG = data;
  1105  05AB  0870               	movf	UART_Write@data,w
  1106  05AC  1283               	bcf	3,5	;RP0=0, select bank0
  1107  05AD  1303               	bcf	3,6	;RP1=0, select bank0
  1108  05AE  0099               	movwf	25	;volatile
  1109  05AF                     l81:
  1110  05AF  0008               	return
  1111  05B0                     __end_of_UART_Write:
  1112                           
  1113                           	psect	text8
  1114  0722                     __ptext8:	
  1115 ;; *************** function _UART_Init *****************
  1116 ;; Defined at:
  1117 ;;		line 1 in file "./uart.h"
  1118 ;; Parameters:    Size  Location     Type
  1119 ;;  baudrate        4    6[BANK0 ] const long 
  1120 ;; Auto vars:     Size  Location     Type
  1121 ;;  x               2    9[COMMON] unsigned int 
  1122 ;; Return value:  Size  Location     Type
  1123 ;;                  1    wreg      unsigned char 
  1124 ;; Registers used:
  1125 ;;		wreg, status,2, status,0, pclath, cstack
  1126 ;; Tracked objects:
  1127 ;;		On entry : 0/0
  1128 ;;		On exit  : 0/0
  1129 ;;		Unchanged: 0/0
  1130 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1131 ;;      Params:         0       4       0       0       0
  1132 ;;      Locals:         2       0       0       0       0
  1133 ;;      Temps:          0      12       0       0       0
  1134 ;;      Totals:         2      16       0       0       0
  1135 ;;Total ram usage:       18 bytes
  1136 ;; Hardware stack levels used: 1
  1137 ;; Hardware stack levels required when called: 1
  1138 ;; This function calls:
  1139 ;;		___aldiv
  1140 ;; This function is called by:
  1141 ;;		_main
  1142 ;; This function uses a non-reentrant model
  1143 ;;
  1144                           
  1145                           
  1146                           ;psect for function _UART_Init
  1147  0722                     _UART_Init:
  1148  0722                     l935:	
  1149                           ;incstack = 0
  1150                           ; Regs used in _UART_Init: [wreg+status,2+status,0+pclath+cstack]
  1151                           
  1152                           
  1153                           ;./uart.h: 1: char UART_Init(const long int baudrate);./uart.h: 2: {;./uart.h: 3:  unsig
      +                          ned int x;;./uart.h: 4:  x = (8000000 - baudrate*64)/(baudrate*64);
  1154  0722  1283               	bcf	3,5	;RP0=0, select bank0
  1155  0723  1303               	bcf	3,6	;RP1=0, select bank0
  1156  0724  0826               	movf	UART_Init@baudrate,w
  1157  0725  00AA               	movwf	??_UART_Init
  1158  0726  0827               	movf	UART_Init@baudrate+1,w
  1159  0727  00AB               	movwf	??_UART_Init+1
  1160  0728  0828               	movf	UART_Init@baudrate+2,w
  1161  0729  00AC               	movwf	??_UART_Init+2
  1162  072A  0829               	movf	UART_Init@baudrate+3,w
  1163  072B  00AD               	movwf	??_UART_Init+3
  1164  072C  3006               	movlw	6
  1165  072D                     u405:
  1166  072D  1003               	clrc
  1167  072E  0DAA               	rlf	??_UART_Init,f
  1168  072F  0DAB               	rlf	??_UART_Init+1,f
  1169  0730  0DAC               	rlf	??_UART_Init+2,f
  1170  0731  0DAD               	rlf	??_UART_Init+3,f
  1171  0732                     u400:
  1172  0732  3EFF               	addlw	-1
  1173  0733  1D03               	skipz
  1174  0734  2F2D               	goto	u405
  1175  0735  082D               	movf	??_UART_Init+3,w
  1176  0736  00F3               	movwf	___aldiv@divisor+3
  1177  0737  082C               	movf	??_UART_Init+2,w
  1178  0738  00F2               	movwf	___aldiv@divisor+2
  1179  0739  082B               	movf	??_UART_Init+1,w
  1180  073A  00F1               	movwf	___aldiv@divisor+1
  1181  073B  082A               	movf	??_UART_Init,w
  1182  073C  00F0               	movwf	___aldiv@divisor
  1183  073D  0826               	movf	UART_Init@baudrate,w
  1184  073E  00AE               	movwf	??_UART_Init+4
  1185  073F  0827               	movf	UART_Init@baudrate+1,w
  1186  0740  00AF               	movwf	??_UART_Init+5
  1187  0741  0828               	movf	UART_Init@baudrate+2,w
  1188  0742  00B0               	movwf	??_UART_Init+6
  1189  0743  0829               	movf	UART_Init@baudrate+3,w
  1190  0744  00B1               	movwf	??_UART_Init+7
  1191  0745  3006               	movlw	6
  1192  0746                     u415:
  1193  0746  1003               	clrc
  1194  0747  0DAE               	rlf	??_UART_Init+4,f
  1195  0748  0DAF               	rlf	??_UART_Init+5,f
  1196  0749  0DB0               	rlf	??_UART_Init+6,f
  1197  074A  0DB1               	rlf	??_UART_Init+7,f
  1198  074B                     u410:
  1199  074B  3EFF               	addlw	-1
  1200  074C  1D03               	skipz
  1201  074D  2F46               	goto	u415
  1202  074E  3000               	movlw	0
  1203  074F  00B2               	movwf	??_UART_Init+8
  1204  0750  3012               	movlw	18
  1205  0751  00B3               	movwf	??_UART_Init+9
  1206  0752  307A               	movlw	122
  1207  0753  00B4               	movwf	??_UART_Init+10
  1208  0754  3000               	movlw	0
  1209  0755  00B5               	movwf	??_UART_Init+11
  1210  0756  082E               	movf	??_UART_Init+4,w
  1211  0757  02B2               	subwf	??_UART_Init+8,f
  1212  0758  082F               	movf	??_UART_Init+5,w
  1213  0759  1C03               	skipc
  1214  075A  0F2F               	incfsz	??_UART_Init+5,w
  1215  075B  2F5D               	goto	u421
  1216  075C  2F5E               	goto	u422
  1217  075D                     u421:
  1218  075D  02B3               	subwf	??_UART_Init+9,f
  1219  075E                     u422:
  1220  075E  0830               	movf	??_UART_Init+6,w
  1221  075F  1C03               	skipc
  1222  0760  0F30               	incfsz	??_UART_Init+6,w
  1223  0761  2F63               	goto	u423
  1224  0762  2F64               	goto	u424
  1225  0763                     u423:
  1226  0763  02B4               	subwf	??_UART_Init+10,f
  1227  0764                     u424:
  1228  0764  0831               	movf	??_UART_Init+7,w
  1229  0765  1C03               	skipc
  1230  0766  0F31               	incfsz	??_UART_Init+7,w
  1231  0767  2F69               	goto	u425
  1232  0768  2F6A               	goto	u426
  1233  0769                     u425:
  1234  0769  02B5               	subwf	??_UART_Init+11,f
  1235  076A                     u426:
  1236  076A  0835               	movf	??_UART_Init+11,w
  1237  076B  00F7               	movwf	___aldiv@dividend+3
  1238  076C  0834               	movf	??_UART_Init+10,w
  1239  076D  00F6               	movwf	___aldiv@dividend+2
  1240  076E  0833               	movf	??_UART_Init+9,w
  1241  076F  00F5               	movwf	___aldiv@dividend+1
  1242  0770  0832               	movf	??_UART_Init+8,w
  1243  0771  00F4               	movwf	___aldiv@dividend
  1244  0772  120A  118A  2685  120A  118A  	fcall	___aldiv
  1245  0777  0871               	movf	?___aldiv+1,w
  1246  0778  00FA               	movwf	UART_Init@x+1
  1247  0779  0870               	movf	?___aldiv,w
  1248  077A  00F9               	movwf	UART_Init@x
  1249  077B                     l937:
  1250                           
  1251                           ;./uart.h: 5:  if(x>255)
  1252  077B  3001               	movlw	1
  1253  077C  027A               	subwf	UART_Init@x+1,w
  1254  077D  3000               	movlw	0
  1255  077E  1903               	skipnz
  1256  077F  0279               	subwf	UART_Init@x,w
  1257  0780  1C03               	skipc
  1258  0781  2F83               	goto	u431
  1259  0782  2F84               	goto	u430
  1260  0783                     u431:
  1261  0783  2FE0               	goto	l943
  1262  0784                     u430:
  1263  0784                     l939:
  1264                           
  1265                           ;./uart.h: 6:  {;./uart.h: 7:   x = (8000000 - baudrate*16)/(baudrate*16);
  1266  0784  1283               	bcf	3,5	;RP0=0, select bank0
  1267  0785  1303               	bcf	3,6	;RP1=0, select bank0
  1268  0786  0826               	movf	UART_Init@baudrate,w
  1269  0787  00AA               	movwf	??_UART_Init
  1270  0788  0827               	movf	UART_Init@baudrate+1,w
  1271  0789  00AB               	movwf	??_UART_Init+1
  1272  078A  0828               	movf	UART_Init@baudrate+2,w
  1273  078B  00AC               	movwf	??_UART_Init+2
  1274  078C  0829               	movf	UART_Init@baudrate+3,w
  1275  078D  00AD               	movwf	??_UART_Init+3
  1276  078E  3004               	movlw	4
  1277  078F                     u445:
  1278  078F  1003               	clrc
  1279  0790  0DAA               	rlf	??_UART_Init,f
  1280  0791  0DAB               	rlf	??_UART_Init+1,f
  1281  0792  0DAC               	rlf	??_UART_Init+2,f
  1282  0793  0DAD               	rlf	??_UART_Init+3,f
  1283  0794                     u440:
  1284  0794  3EFF               	addlw	-1
  1285  0795  1D03               	skipz
  1286  0796  2F8F               	goto	u445
  1287  0797  082D               	movf	??_UART_Init+3,w
  1288  0798  00F3               	movwf	___aldiv@divisor+3
  1289  0799  082C               	movf	??_UART_Init+2,w
  1290  079A  00F2               	movwf	___aldiv@divisor+2
  1291  079B  082B               	movf	??_UART_Init+1,w
  1292  079C  00F1               	movwf	___aldiv@divisor+1
  1293  079D  082A               	movf	??_UART_Init,w
  1294  079E  00F0               	movwf	___aldiv@divisor
  1295  079F  0826               	movf	UART_Init@baudrate,w
  1296  07A0  00AE               	movwf	??_UART_Init+4
  1297  07A1  0827               	movf	UART_Init@baudrate+1,w
  1298  07A2  00AF               	movwf	??_UART_Init+5
  1299  07A3  0828               	movf	UART_Init@baudrate+2,w
  1300  07A4  00B0               	movwf	??_UART_Init+6
  1301  07A5  0829               	movf	UART_Init@baudrate+3,w
  1302  07A6  00B1               	movwf	??_UART_Init+7
  1303  07A7  3004               	movlw	4
  1304  07A8                     u455:
  1305  07A8  1003               	clrc
  1306  07A9  0DAE               	rlf	??_UART_Init+4,f
  1307  07AA  0DAF               	rlf	??_UART_Init+5,f
  1308  07AB  0DB0               	rlf	??_UART_Init+6,f
  1309  07AC  0DB1               	rlf	??_UART_Init+7,f
  1310  07AD                     u450:
  1311  07AD  3EFF               	addlw	-1
  1312  07AE  1D03               	skipz
  1313  07AF  2FA8               	goto	u455
  1314  07B0  3000               	movlw	0
  1315  07B1  00B2               	movwf	??_UART_Init+8
  1316  07B2  3012               	movlw	18
  1317  07B3  00B3               	movwf	??_UART_Init+9
  1318  07B4  307A               	movlw	122
  1319  07B5  00B4               	movwf	??_UART_Init+10
  1320  07B6  3000               	movlw	0
  1321  07B7  00B5               	movwf	??_UART_Init+11
  1322  07B8  082E               	movf	??_UART_Init+4,w
  1323  07B9  02B2               	subwf	??_UART_Init+8,f
  1324  07BA  082F               	movf	??_UART_Init+5,w
  1325  07BB  1C03               	skipc
  1326  07BC  0F2F               	incfsz	??_UART_Init+5,w
  1327  07BD  2FBF               	goto	u461
  1328  07BE  2FC0               	goto	u462
  1329  07BF                     u461:
  1330  07BF  02B3               	subwf	??_UART_Init+9,f
  1331  07C0                     u462:
  1332  07C0  0830               	movf	??_UART_Init+6,w
  1333  07C1  1C03               	skipc
  1334  07C2  0F30               	incfsz	??_UART_Init+6,w
  1335  07C3  2FC5               	goto	u463
  1336  07C4  2FC6               	goto	u464
  1337  07C5                     u463:
  1338  07C5  02B4               	subwf	??_UART_Init+10,f
  1339  07C6                     u464:
  1340  07C6  0831               	movf	??_UART_Init+7,w
  1341  07C7  1C03               	skipc
  1342  07C8  0F31               	incfsz	??_UART_Init+7,w
  1343  07C9  2FCB               	goto	u465
  1344  07CA  2FCC               	goto	u466
  1345  07CB                     u465:
  1346  07CB  02B5               	subwf	??_UART_Init+11,f
  1347  07CC                     u466:
  1348  07CC  0835               	movf	??_UART_Init+11,w
  1349  07CD  00F7               	movwf	___aldiv@dividend+3
  1350  07CE  0834               	movf	??_UART_Init+10,w
  1351  07CF  00F6               	movwf	___aldiv@dividend+2
  1352  07D0  0833               	movf	??_UART_Init+9,w
  1353  07D1  00F5               	movwf	___aldiv@dividend+1
  1354  07D2  0832               	movf	??_UART_Init+8,w
  1355  07D3  00F4               	movwf	___aldiv@dividend
  1356  07D4  120A  118A  2685  120A  118A  	fcall	___aldiv
  1357  07D9  0871               	movf	?___aldiv+1,w
  1358  07DA  00FA               	movwf	UART_Init@x+1
  1359  07DB  0870               	movf	?___aldiv,w
  1360  07DC  00F9               	movwf	UART_Init@x
  1361  07DD                     l941:
  1362                           
  1363                           ;./uart.h: 8:   BRGH = 1;
  1364  07DD  1683               	bsf	3,5	;RP0=1, select bank1
  1365  07DE  1303               	bcf	3,6	;RP1=0, select bank1
  1366  07DF  1518               	bsf	24,2	;volatile
  1367  07E0                     l943:
  1368                           
  1369                           ;./uart.h: 10:  if(x<256)
  1370  07E0  3001               	movlw	1
  1371  07E1  027A               	subwf	UART_Init@x+1,w
  1372  07E2  3000               	movlw	0
  1373  07E3  1903               	skipnz
  1374  07E4  0279               	subwf	UART_Init@x,w
  1375  07E5  1803               	skipnc
  1376  07E6  2FE8               	goto	u471
  1377  07E7  2FE9               	goto	u470
  1378  07E8                     u471:
  1379  07E8  2FFB               	goto	l57
  1380  07E9                     u470:
  1381  07E9                     l945:
  1382                           
  1383                           ;./uart.h: 11:  {;./uart.h: 12:    SPBRG = x;
  1384  07E9  0879               	movf	UART_Init@x,w
  1385  07EA  1683               	bsf	3,5	;RP0=1, select bank1
  1386  07EB  1303               	bcf	3,6	;RP1=0, select bank1
  1387  07EC  0099               	movwf	25	;volatile
  1388  07ED                     l947:
  1389                           
  1390                           ;./uart.h: 13:    SYNC = 0;
  1391  07ED  1218               	bcf	24,4	;volatile
  1392  07EE                     l949:
  1393                           
  1394                           ;./uart.h: 14:    SPEN = 1;
  1395  07EE  1283               	bcf	3,5	;RP0=0, select bank0
  1396  07EF  1303               	bcf	3,6	;RP1=0, select bank0
  1397  07F0  1798               	bsf	24,7	;volatile
  1398  07F1                     l951:
  1399                           
  1400                           ;./uart.h: 15:           TRISC7 = 1;
  1401  07F1  1683               	bsf	3,5	;RP0=1, select bank1
  1402  07F2  1303               	bcf	3,6	;RP1=0, select bank1
  1403  07F3  1787               	bsf	7,7	;volatile
  1404  07F4                     l953:
  1405                           
  1406                           ;./uart.h: 16:           TRISC6 = 1;
  1407  07F4  1707               	bsf	7,6	;volatile
  1408  07F5                     l955:
  1409                           
  1410                           ;./uart.h: 17:           CREN = 1;
  1411  07F5  1283               	bcf	3,5	;RP0=0, select bank0
  1412  07F6  1303               	bcf	3,6	;RP1=0, select bank0
  1413  07F7  1618               	bsf	24,4	;volatile
  1414  07F8                     l957:
  1415                           
  1416                           ;./uart.h: 18:           TXEN = 1;
  1417  07F8  1683               	bsf	3,5	;RP0=1, select bank1
  1418  07F9  1303               	bcf	3,6	;RP1=0, select bank1
  1419  07FA  1698               	bsf	24,5	;volatile
  1420  07FB                     l57:
  1421  07FB  0008               	return
  1422  07FC                     __end_of_UART_Init:
  1423                           
  1424                           	psect	text9
  1425  0685                     __ptext9:	
  1426 ;; *************** function ___aldiv *****************
  1427 ;; Defined at:
  1428 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\aldiv.c"
  1429 ;; Parameters:    Size  Location     Type
  1430 ;;  divisor         4    0[COMMON] long 
  1431 ;;  dividend        4    4[COMMON] long 
  1432 ;; Auto vars:     Size  Location     Type
  1433 ;;  quotient        4    2[BANK0 ] long 
  1434 ;;  sign            1    1[BANK0 ] unsigned char 
  1435 ;;  counter         1    0[BANK0 ] unsigned char 
  1436 ;; Return value:  Size  Location     Type
  1437 ;;                  4    0[COMMON] long 
  1438 ;; Registers used:
  1439 ;;		wreg, status,2, status,0
  1440 ;; Tracked objects:
  1441 ;;		On entry : 0/0
  1442 ;;		On exit  : 0/0
  1443 ;;		Unchanged: 0/0
  1444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1445 ;;      Params:         8       0       0       0       0
  1446 ;;      Locals:         0       6       0       0       0
  1447 ;;      Temps:          1       0       0       0       0
  1448 ;;      Totals:         9       6       0       0       0
  1449 ;;Total ram usage:       15 bytes
  1450 ;; Hardware stack levels used: 1
  1451 ;; This function calls:
  1452 ;;		Nothing
  1453 ;; This function is called by:
  1454 ;;		_UART_Init
  1455 ;; This function uses a non-reentrant model
  1456 ;;
  1457                           
  1458                           
  1459                           ;psect for function ___aldiv
  1460  0685                     ___aldiv:
  1461  0685                     l895:	
  1462                           ;incstack = 0
  1463                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  1464                           
  1465  0685  1283               	bcf	3,5	;RP0=0, select bank0
  1466  0686  1303               	bcf	3,6	;RP1=0, select bank0
  1467  0687  01A1               	clrf	___aldiv@sign
  1468  0688                     l897:
  1469  0688  1FF3               	btfss	___aldiv@divisor+3,7
  1470  0689  2E8B               	goto	u301
  1471  068A  2E8C               	goto	u300
  1472  068B                     u301:
  1473  068B  2E99               	goto	l282
  1474  068C                     u300:
  1475  068C                     l899:
  1476  068C  09F0               	comf	___aldiv@divisor,f
  1477  068D  09F1               	comf	___aldiv@divisor+1,f
  1478  068E  09F2               	comf	___aldiv@divisor+2,f
  1479  068F  09F3               	comf	___aldiv@divisor+3,f
  1480  0690  0AF0               	incf	___aldiv@divisor,f
  1481  0691  1903               	skipnz
  1482  0692  0AF1               	incf	___aldiv@divisor+1,f
  1483  0693  1903               	skipnz
  1484  0694  0AF2               	incf	___aldiv@divisor+2,f
  1485  0695  1903               	skipnz
  1486  0696  0AF3               	incf	___aldiv@divisor+3,f
  1487  0697  01A1               	clrf	___aldiv@sign
  1488  0698  0AA1               	incf	___aldiv@sign,f
  1489  0699                     l282:
  1490  0699  1FF7               	btfss	___aldiv@dividend+3,7
  1491  069A  2E9C               	goto	u311
  1492  069B  2E9D               	goto	u310
  1493  069C                     u311:
  1494  069C  2EAC               	goto	l905
  1495  069D                     u310:
  1496  069D                     l901:
  1497  069D  09F4               	comf	___aldiv@dividend,f
  1498  069E  09F5               	comf	___aldiv@dividend+1,f
  1499  069F  09F6               	comf	___aldiv@dividend+2,f
  1500  06A0  09F7               	comf	___aldiv@dividend+3,f
  1501  06A1  0AF4               	incf	___aldiv@dividend,f
  1502  06A2  1903               	skipnz
  1503  06A3  0AF5               	incf	___aldiv@dividend+1,f
  1504  06A4  1903               	skipnz
  1505  06A5  0AF6               	incf	___aldiv@dividend+2,f
  1506  06A6  1903               	skipnz
  1507  06A7  0AF7               	incf	___aldiv@dividend+3,f
  1508  06A8                     l903:
  1509  06A8  3001               	movlw	1
  1510  06A9  00F8               	movwf	??___aldiv
  1511  06AA  0878               	movf	??___aldiv,w
  1512  06AB  06A1               	xorwf	___aldiv@sign,f
  1513  06AC                     l905:
  1514  06AC  3000               	movlw	0
  1515  06AD  00A5               	movwf	___aldiv@quotient+3
  1516  06AE  3000               	movlw	0
  1517  06AF  00A4               	movwf	___aldiv@quotient+2
  1518  06B0  3000               	movlw	0
  1519  06B1  00A3               	movwf	___aldiv@quotient+1
  1520  06B2  3000               	movlw	0
  1521  06B3  00A2               	movwf	___aldiv@quotient
  1522  06B4                     l907:
  1523  06B4  0873               	movf	___aldiv@divisor+3,w
  1524  06B5  0472               	iorwf	___aldiv@divisor+2,w
  1525  06B6  0471               	iorwf	___aldiv@divisor+1,w
  1526  06B7  0470               	iorwf	___aldiv@divisor,w
  1527  06B8  1903               	skipnz
  1528  06B9  2EBB               	goto	u321
  1529  06BA  2EBC               	goto	u320
  1530  06BB                     u321:
  1531  06BB  2F09               	goto	l927
  1532  06BC                     u320:
  1533  06BC                     l909:
  1534  06BC  01A0               	clrf	___aldiv@counter
  1535  06BD  0AA0               	incf	___aldiv@counter,f
  1536  06BE  2ECC               	goto	l913
  1537  06BF                     l911:
  1538  06BF  3001               	movlw	1
  1539  06C0  00F8               	movwf	??___aldiv
  1540  06C1                     u335:
  1541  06C1  1003               	clrc
  1542  06C2  0DF0               	rlf	___aldiv@divisor,f
  1543  06C3  0DF1               	rlf	___aldiv@divisor+1,f
  1544  06C4  0DF2               	rlf	___aldiv@divisor+2,f
  1545  06C5  0DF3               	rlf	___aldiv@divisor+3,f
  1546  06C6  0BF8               	decfsz	??___aldiv,f
  1547  06C7  2EC1               	goto	u335
  1548  06C8  3001               	movlw	1
  1549  06C9  00F8               	movwf	??___aldiv
  1550  06CA  0878               	movf	??___aldiv,w
  1551  06CB  07A0               	addwf	___aldiv@counter,f
  1552  06CC                     l913:
  1553  06CC  1FF3               	btfss	___aldiv@divisor+3,7
  1554  06CD  2ECF               	goto	u341
  1555  06CE  2ED0               	goto	u340
  1556  06CF                     u341:
  1557  06CF  2EBF               	goto	l911
  1558  06D0                     u340:
  1559  06D0                     l915:
  1560  06D0  3001               	movlw	1
  1561  06D1  00F8               	movwf	??___aldiv
  1562  06D2                     u355:
  1563  06D2  1003               	clrc
  1564  06D3  0DA2               	rlf	___aldiv@quotient,f
  1565  06D4  0DA3               	rlf	___aldiv@quotient+1,f
  1566  06D5  0DA4               	rlf	___aldiv@quotient+2,f
  1567  06D6  0DA5               	rlf	___aldiv@quotient+3,f
  1568  06D7  0BF8               	decfsz	??___aldiv,f
  1569  06D8  2ED2               	goto	u355
  1570  06D9                     l917:
  1571  06D9  0873               	movf	___aldiv@divisor+3,w
  1572  06DA  0277               	subwf	___aldiv@dividend+3,w
  1573  06DB  1D03               	skipz
  1574  06DC  2EE7               	goto	u365
  1575  06DD  0872               	movf	___aldiv@divisor+2,w
  1576  06DE  0276               	subwf	___aldiv@dividend+2,w
  1577  06DF  1D03               	skipz
  1578  06E0  2EE7               	goto	u365
  1579  06E1  0871               	movf	___aldiv@divisor+1,w
  1580  06E2  0275               	subwf	___aldiv@dividend+1,w
  1581  06E3  1D03               	skipz
  1582  06E4  2EE7               	goto	u365
  1583  06E5  0870               	movf	___aldiv@divisor,w
  1584  06E6  0274               	subwf	___aldiv@dividend,w
  1585  06E7                     u365:
  1586  06E7  1C03               	skipc
  1587  06E8  2EEA               	goto	u361
  1588  06E9  2EEB               	goto	u360
  1589  06EA                     u361:
  1590  06EA  2EFA               	goto	l923
  1591  06EB                     u360:
  1592  06EB                     l919:
  1593  06EB  0870               	movf	___aldiv@divisor,w
  1594  06EC  02F4               	subwf	___aldiv@dividend,f
  1595  06ED  0871               	movf	___aldiv@divisor+1,w
  1596  06EE  1C03               	skipc
  1597  06EF  0F71               	incfsz	___aldiv@divisor+1,w
  1598  06F0  02F5               	subwf	___aldiv@dividend+1,f
  1599  06F1  0872               	movf	___aldiv@divisor+2,w
  1600  06F2  1C03               	skipc
  1601  06F3  0F72               	incfsz	___aldiv@divisor+2,w
  1602  06F4  02F6               	subwf	___aldiv@dividend+2,f
  1603  06F5  0873               	movf	___aldiv@divisor+3,w
  1604  06F6  1C03               	skipc
  1605  06F7  0F73               	incfsz	___aldiv@divisor+3,w
  1606  06F8  02F7               	subwf	___aldiv@dividend+3,f
  1607  06F9                     l921:
  1608  06F9  1422               	bsf	___aldiv@quotient,0
  1609  06FA                     l923:
  1610  06FA  3001               	movlw	1
  1611  06FB                     u375:
  1612  06FB  1003               	clrc
  1613  06FC  0CF3               	rrf	___aldiv@divisor+3,f
  1614  06FD  0CF2               	rrf	___aldiv@divisor+2,f
  1615  06FE  0CF1               	rrf	___aldiv@divisor+1,f
  1616  06FF  0CF0               	rrf	___aldiv@divisor,f
  1617  0700  3EFF               	addlw	-1
  1618  0701  1D03               	skipz
  1619  0702  2EFB               	goto	u375
  1620  0703                     l925:
  1621  0703  3001               	movlw	1
  1622  0704  02A0               	subwf	___aldiv@counter,f
  1623  0705  1D03               	btfss	3,2
  1624  0706  2F08               	goto	u381
  1625  0707  2F09               	goto	u380
  1626  0708                     u381:
  1627  0708  2ED0               	goto	l915
  1628  0709                     u380:
  1629  0709                     l927:
  1630  0709  0821               	movf	___aldiv@sign,w
  1631  070A  1903               	btfsc	3,2
  1632  070B  2F0D               	goto	u391
  1633  070C  2F0E               	goto	u390
  1634  070D                     u391:
  1635  070D  2F19               	goto	l931
  1636  070E                     u390:
  1637  070E                     l929:
  1638  070E  09A2               	comf	___aldiv@quotient,f
  1639  070F  09A3               	comf	___aldiv@quotient+1,f
  1640  0710  09A4               	comf	___aldiv@quotient+2,f
  1641  0711  09A5               	comf	___aldiv@quotient+3,f
  1642  0712  0AA2               	incf	___aldiv@quotient,f
  1643  0713  1903               	skipnz
  1644  0714  0AA3               	incf	___aldiv@quotient+1,f
  1645  0715  1903               	skipnz
  1646  0716  0AA4               	incf	___aldiv@quotient+2,f
  1647  0717  1903               	skipnz
  1648  0718  0AA5               	incf	___aldiv@quotient+3,f
  1649  0719                     l931:
  1650  0719  0825               	movf	___aldiv@quotient+3,w
  1651  071A  00F3               	movwf	?___aldiv+3
  1652  071B  0824               	movf	___aldiv@quotient+2,w
  1653  071C  00F2               	movwf	?___aldiv+2
  1654  071D  0823               	movf	___aldiv@quotient+1,w
  1655  071E  00F1               	movwf	?___aldiv+1
  1656  071F  0822               	movf	___aldiv@quotient,w
  1657  0720  00F0               	movwf	?___aldiv
  1658  0721                     l292:
  1659  0721  0008               	return
  1660  0722                     __end_of___aldiv:
  1661  007E                     btemp	set	126	;btemp
  1662  007E                     wtemp0	set	126
  1663                           
  1664                           	psect	config
  1665                           
  1666                           ;Config register CONFIG @ 0x2007
  1667                           ;	Oscillator Selection bits
  1668                           ;	FOSC = XT, XT oscillator
  1669                           ;	Watchdog Timer Enable bit
  1670                           ;	WDTE = OFF, WDT disabled
  1671                           ;	Power-up Timer Enable bit
  1672                           ;	PWRTE = OFF, PWRT disabled
  1673                           ;	Brown-out Reset Enable bit
  1674                           ;	BOREN = OFF, BOR disabled
  1675                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1676                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  1677                           ;	Data EEPROM Memory Code Protection bit
  1678                           ;	CPD = OFF, Data EEPROM code protection off
  1679                           ;	Flash Program Memory Write Enable bits
  1680                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1681                           ;	In-Circuit Debugger Mode bit
  1682                           ;	DEBUG = 0x1, unprogrammed default
  1683                           ;	Flash Program Memory Code Protection bit
  1684                           ;	CP = OFF, Code protection off
  1685  2007                     	org	8199
  1686  2007  3F39               	dw	16185

Data Sizes:
    Strings     11
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     24      24
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    UART_Write_Text@text	PTR unsigned char  size(1) Largest target is 8
		 -> STR_2(CODE[3]), STR_1(CODE[8]), 


Critical Paths under _main in COMMON

    _main->_UART_Init
    _UART_Write_Text->_UART_Write
    _UART_Init->___aldiv

Critical Paths under _main in BANK0

    _main->_UART_Init
    _UART_Init->___aldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    1441
                                             11 COMMON     3     3      0
                                             22 BANK0      2     2      0
                          _UART_Init
                         _UART_Write
                    _UART_Write_Text
                       _spiDataReady
                            _spiInit
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (1) _spiWrite                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (2) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _spiInit                                              4     1      3     360
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _spiDataReady                                         2     0      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _UART_Write_Text                                      3     3      0     178
                                              1 COMMON     3     3      0
                         _UART_Write
 ---------------------------------------------------------------------------------
 (2) _UART_Write                                           1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                           18    14      4     836
                                              9 COMMON     2     2      0
                                              6 BANK0     16    12      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     604
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_Init
     ___aldiv
   _UART_Write
   _UART_Write_Text
     _UART_Write
   _spiDataReady
   _spiInit
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     18      18       5       30.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Nov 22 08:21:58 2021

                       pc 0002               _SSPSTATbits 0094                        l57 07FB  
                      l81 05AF                        l93 0678                        l78 05A5  
                      l87 05F8                        fsr 0004                       l120 059A  
                     l113 05CE                       l114 05D3                       l131 05A3  
                     l123 0593                       l117 0594                       l127 05BD  
                     l282 0699                       l292 0721                       l901 069D  
                     l911 06BF                       l903 06A8                       l921 06F9  
                     l913 06CC                       l905 06AC                       l931 0719  
                     l923 06FA                       l915 06D0                       l907 06B4  
                     l925 0703                       l917 06D9                       l909 06BC  
                     l941 07DD                       l919 06EB                       l927 0709  
                     l951 07F1                       l943 07E0                       l935 0722  
                     l929 070E                       l953 07F4                       l945 07E9  
                     l937 077B                       l961 05D5                       l955 07F5  
                     l947 07ED                       l939 0784                       l891 05AB  
                     l963 05D8                       l971 05C6                       l957 07F8  
                     l949 07EE                       l965 05E5                       l981 05B6  
                     l973 05C8                       l893 0594                       l895 0685  
                     l967 05EB                       l975 05CA                       l991 059B  
                     l897 0688                       l889 05A5                       l977 05CD  
                     l969 05BF                       l993 05A0                       l899 068C  
                     l987 05BB                       l979 05B0                       _GIE 005F  
                     l997 058F                       l999 05F9                       _RD0 0040  
                     u300 068C                       u301 068B                       u310 069D  
                     u311 069C                       u320 06BC                       u400 0732  
                     u321 06BB                       u410 074B                       u340 06D0  
                     u500 05B6                       u341 06CF                       u421 075D  
                     u405 072D                       u501 05B5                       u430 0784  
                     u422 075E                       u510 062B                       u335 06C1  
                     u431 0783                       u423 0763                       u415 0746  
                     u511 062A                       u360 06EB                       u440 0794  
                     u424 0764                       u280 05AB                       u520 0642  
                     u361 06EA                       u425 0769                       u281 05AA  
                     u521 0641                       u450 07AD                       u426 076A  
                     u290 059A                       u355 06D2                       u291 0599  
                     u380 0709                       u381 0708                       u365 06E7  
                     u461 07BF                       u445 078F                       u390 070E  
                     u470 07E9                       u462 07C0                       u391 070D  
                     u375 06FB                       u471 07E8                       u463 07C5  
                     u455 07A8                       u464 07C6                       u480 05F8  
                     u465 07CB                       u481 05F7                       u537 065D  
                     u466 07CC                       u490 05C6                       u491 05C5  
                     u547 066D                       u557 067C                       fsr0 0004  
                    l1001 05FF                      l1011 0607                      l1003 0600  
                    l1021 0642                      l1013 0608                      l1005 0601  
                    l1031 0661                      l1023 0645                      l1015 0617  
                    l1007 0602                      l1025 064B                      l1033 0674  
                    l1017 0620                      l1009 0605                      l1035 0677  
                    l1027 0651                      l1019 062B                      l1029 0659  
                    STR_1 0009                      STR_2 0011                      _BRGH 04C2  
                    _CREN 00C4                      _PEIE 005E                      _RCIF 0065  
                    _SPEN 00C7                      _TRMT 04C1                      _TXEN 04C5  
                    _SYNC 04C4                      _main 05F9                      btemp 007E  
                    start 0000   __end_of_UART_Write_Text 05F9           __end_of___aldiv 0722  
                   ?_main 0070                     _RCREG 001A                     _SPBRG 0099  
                   _PORTD 0008                     _TRISD 0088                     _SSPIE 0463  
                   _SSPIF 0063                     _TXREG 0019               ?_UART_Write 0070  
      __size_of_UART_Init 00DA                     pclath 000A           __end_of_spiInit 05D4  
         __end_of_spiRead 05A4                     status 0003                     wtemp0 007E  
         __initialization 07FC              __end_of_main 0685                    ??_main 007B  
                  _ADCON1 009F                    _TRISA5 042D                    _TRISC3 043B  
                  _TRISC5 043D                    _TRISC6 043E                    _TRISC7 043F  
                  _SSPCON 0014                    _SSPBUF 0013         __end_of_UART_Init 07FC  
     __size_of_UART_Write 000C                 ??___aldiv 0078          ?_UART_Write_Text 0070  
        __end_of_spiWrite 0594                 ??_spiInit 0073                 ??_spiRead 0070  
 __end_of__initialization 07FC            __pcstackCOMMON 0070                __pmaintext 05F9  
 __size_of_spiReceiveWait 0007             ?_spiDataReady 0070              ??_UART_Write 0070  
                 _SSPSTAT 0094                __stringtab 0003                 ?_spiWrite 0070  
                 ___aldiv 0685        __end_of_UART_Write 05B0                   __ptext1 058E  
                 __ptext2 059B                   __ptext3 0594                   __ptext4 05BE  
                 __ptext5 05B0                   __ptext6 05D4                   __ptext7 05A4  
                 __ptext8 0722                   __ptext9 0685            ??_spiDataReady 0072  
        ___aldiv@dividend 0074                   _spiInit 05BE                   _spiRead 059B  
    end_of_initialization 07FC          ___aldiv@quotient 0022                ??_spiWrite 0070  
               _UART_Init 0722            UART_Write@data 0070               spiWrite@dat 0070  
          _spiReceiveWait 0594                ?_UART_Init 0026  __size_of_UART_Write_Text 0025  
     start_initialization 07FC      __end_of_spiDataReady 05BE    __end_of_spiReceiveWait 059B  
               ___latbits 0002             __pcstackBANK0 0020           ?_spiReceiveWait 0070  
                ?___aldiv 0070               ??_UART_Init 002A         __size_of_spiWrite 0006  
               __pstrings 0003                  ?_spiInit 0070                  ?_spiRead 0070  
              UART_Init@x 0079         ??_UART_Write_Text 0071           ___aldiv@divisor 0070  
    spiInit@sTransmitEdge 0072           ___aldiv@counter 0020        spiInit@sDataSample 0070  
       UART_Init@baudrate 0026               __stringbase 0008     __size_of_spiDataReady 000E  
        __size_of___aldiv 009D        __end_of__stringtab 0009              _spiDataReady 05B0  
        __size_of_spiInit 0016          __size_of_spiRead 0009       UART_Write_Text@text 0073  
           __size_of_main 008C                  _spiWrite 058E              spiInit@sType 0073  
                main@data 0036         spiInit@sClockIdle 0071          ??_spiReceiveWait 0070  
               stringcode 0003           _UART_Write_Text 05D4                  stringdir 0003  
                stringtab 0003              ___aldiv@sign 0021                _UART_Write 05A4  
        UART_Write_Text@i 0071  
